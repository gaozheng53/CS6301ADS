
// Test code for LP1 Level 2:
/* Output:
42066067247308158164843804394170094001512031695090
425918930772515373570742513635648
342342737580166640522218
799630641964247521986658683093860910237325116204604426277060031523281506685027441364298253414118313302846689279251222447720550391113790785738379723453094528856305960596314890742041285255230980286447096087115605086885855498616267680641960020315392263959261210736433141698211743605866200015111612415813481081
894220689742888649736203507357556368702791381393051021360901738702523316210879372954636438196757438751172574768595311479848592370431374122362713255179509
base: list of numbers
*/

package cs6301.g16;
public class LP1L2Test {
    public static void main(String[] args) {
	Num x = new Num("98765432123456789012456789012646378589165127456376");
	Num y = new Num("56698364876147630847612984618476284587653095761286");
	Num z = new Num(98765432123456789L);
	Num e = new Num("85849037612648764376549098612765874365348765673543");
	Num f = new Num("566983648761476308476145");
	Num c = Num.subtract(x, y);
	Num d = Num.divide(c, z);
	Num g = Num.mod(e, f);
	Num eighteen = new Num(18);
	Num a = Num.power(z, eighteen);
	Num b = Num.squareRoot(a);
	System.out.println(c);
	System.out.println(d);
	System.out.println(g);
	System.out.println(a);
	System.out.println(b);
	z.printList();
    }
}
